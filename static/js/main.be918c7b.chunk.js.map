{"version":3,"sources":["Darkmode.js","About_us.js","Alert.js","Navbar.js","Text_Form.js","App.js","reportWebVitals.js","index.js"],"names":["Darkmode","props","type","className","onClick","ChangeMode","ModeInfo","ButtonText","About_us","id","style","BackgroundColor","OtherColors","Alert","alert","role","msg","Navbar","href","Text_Form","useState","MyText","setText","style2","color","Text_color","backgroundColor","sizeoftext","split","length","htmlFor","rows","value","onChange","event","target","s","toUpperCase","showAlert","toLowerCase","s1","s2","i","App","aalert","setAlert","bg_color","setModeInfo","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be918c7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Darkmode(props) {\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-2 mx-5 \"\r\n        // onClick={props.ChangeMode}\r\n        // onClick={ButtonTextChanged}\r\n        onClick={props.ChangeMode}\r\n      >\r\n        {props.ModeInfo.ButtonText || \"DarkMode\"}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport Darkmode from \"./Darkmode\";\r\n\r\nexport default function About_us(props) {\r\n  return (\r\n    <div\r\n      className=\"accordion mx-5 my-5 \"\r\n      id=\"accordionExample\"\r\n      style={{ BackgroundColor: props.ModeInfo.OtherColors }}\r\n    >\r\n      <div\r\n        className=\"accordion-item \"\r\n        style={{ BackgroundColor: props.ModeInfo.OtherColors }}\r\n      >\r\n        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n          <button\r\n            className=\"accordion-button collapsed\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#collapseThree\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"collapseThree\"\r\n            style={{ BackgroundColor: props.ModeInfo.OtherColors }}\r\n          >\r\n            About developer\r\n          </button>\r\n        </h2>\r\n        <div\r\n          id=\"collapseThree\"\r\n          className=\"accordion-collapse collapse\"\r\n          aria-labelledby=\"headingThree\"\r\n          data-bs-parent=\"#accordionExample\"\r\n          style={{ BackgroundColor: props.ModeInfo.OtherColors }}\r\n        >\r\n          <div\r\n            className=\"accordion-body\"\r\n            style={{ BackgroundColor: props.ModeInfo.OtherColors }}\r\n          >\r\n            <strong>Our info</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.msg}</strong>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import { buildQueries, getQueriesForElement } from \"@testing-library/dom\";\r\nimport React from \"react\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          Navbar\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                About us\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Text_Form(props) {\r\n  const [MyText, setText] = useState(\"\");\r\n  const UpperCaseClicked = () => {\r\n    let s = MyText;\r\n    s = s.toUpperCase();\r\n    setText(s);\r\n    props.showAlert(\"Changed to UPPER-CASE\", \"success\");\r\n  };\r\n  const lowercaseClicked = () => {\r\n    let s = MyText;\r\n    s = s.toLowerCase();\r\n    setText(s);\r\n    props.showAlert(\"Changed to lower-case\", \"success\");\r\n  };\r\n  const TextWasChanged = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const EraseClicked = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text was erased\", \"success\");\r\n  };\r\n  const RemoveExtraSpaceClicked = () => {\r\n    let s = MyText;\r\n    let s1 = s.split(\" \");\r\n    let s2 = \"\";\r\n    for (let i = 0; i < s1.length; i++) {\r\n      if (s1[i] !== \"\") {\r\n        s2 += s1[i] + \" \";\r\n      }\r\n    }\r\n    setText(s2);\r\n    props.showAlert(\"Removed extra-space\", \"success\");\r\n  };\r\n  let style1 = {\r\n    backgroundColor: \"cyan\",\r\n    color: \"Green\",\r\n  };\r\n  let style2 = {\r\n    color: props.ModeInfo.Text_color,\r\n    backgroundColor: props.ModeInfo.OtherColors,\r\n  };\r\n\r\n  let sizeoftext = MyText.split(\" \").length;\r\n  return (\r\n    <div className=\"mx-5\">\r\n      <form>\r\n        <div className=\"form-group my-3\" style={style1}>\r\n          <label htmlFor=\"exampleFormControlTextarea1\">\r\n            <h4>\r\n              <b>Type or Paste your text below</b>\r\n            </h4>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"15\"\r\n            value={MyText}\r\n            onChange={TextWasChanged}\r\n            style={style2}\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={UpperCaseClicked}\r\n      >\r\n        Change to UPPER-CASE\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={lowercaseClicked}\r\n      >\r\n        Change to lower-case\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={EraseClicked}\r\n      >\r\n        Erase\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={RemoveExtraSpaceClicked}\r\n      >\r\n        Remove extra spaces\r\n      </button>\r\n      <div className=\"container mx-2\">\r\n        <h3>\r\n          <b>number of words = {sizeoftext} </b>\r\n        </h3>\r\n        <h3>\r\n          <b>reading time = {sizeoftext * 0.3} seconds</b>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react/cjs/react.development\";\nimport About_us from \"./About_us\";\nimport Alert from \"./Alert\";\nimport \"./App.css\";\nimport Darkmode from \"./Darkmode\";\nimport \"./Navbar\";\nimport Navbar from \"./Navbar\";\nimport Text_Form from \"./Text_Form\";\n\nfunction App() {\n  const [aalert, setAlert] = useState(null);\n  const [ModeInfo, setModeInfo] = useState({\n    Text_color: \"Black\",\n    bg_color: \"White\",\n    ButtonText: \"DarkMode\",\n    OtherColors: \"Cyan\",\n  });\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  return (\n    <div\n      style={{ backgroundColor: ModeInfo.bg_color, color: ModeInfo.Text_color }}\n      className=\"fill-window\"\n    >\n      <Navbar />\n      <Alert alert={aalert} />\n      <Text_Form ModeInfo={ModeInfo} showAlert={showAlert} />\n\n      <Darkmode\n        ModeInfo={ModeInfo}\n        ChangeMode={() => {\n          if (ModeInfo.ButtonText === \"DarkMode\") {\n            setModeInfo({\n              Text_color: \"White\",\n              bg_color: \"Black\",\n              ButtonText: \"LightMode\",\n              OtherColors: \"DarkSlateBlue\",\n            });\n          } else {\n            setModeInfo({\n              Text_color: \"Black\",\n              bg_color: \"White\",\n              ButtonText: \"DarkMode\",\n              OtherColors: \"Cyan\",\n            });\n          }\n        }}\n      />\n      <About_us ModeInfo={ModeInfo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}